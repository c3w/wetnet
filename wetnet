#!/usr/bin/env python

import sys, os, iplib, MySQLdb


db=MySQLdb.connect (user="wetnet",
                    passwd="wetnet123",
                    db="wetnet")

def usage(argv):
 if len(argv) == 1:
  print 'Usage: wetnet [create|query] [organization|supernet|set|subnet|host] [orgname|x.x.x.x/x] [device] device-id'
  sys.exit(0)

usage(sys.argv)
sys.argv.pop(0)
cmd=str(sys.argv[0])

def create_organization():
 print "create_organization"
 usage(sys.argv)
 sys.argv.pop(0)
 org=str(sys.argv[0])
 key=raw_input("Create Organization " + org + "? [Y/n]")
 if key == "Y":
  print "YES!"
  cursor = db.cursor ()
  Q="INSERT into organizations (organization_name) VALUES ('" + org + "');"
  cursor.execute (Q)
  cursor.execute ("commit")
  cursor.close ()

def create_supernet():
 print "create_supernet"
 usage(sys.argv)
 sys.argv.pop(0)
 supernet=str(sys.argv[0])
 print "supernet is " + supernet
 try:
  cidr = iplib.CIDR(supernet)
 except ValueError:
  sys.stderr.write('%s: invalid CIDR address.\n' % supernet)
  sys.exit(3)
 try:
  cursor = db.cursor ()
  Q="INSERT into supernets (supernet) VALUES ('" + supernet+ "');"
  print("[INSERT SUPERNET] %s" % supernet)
  cursor.execute (Q)
  cursor.execute ("commit")
  cursor.close ()
 except MySQLdb.IntegrityError:
  print("DUPLICATE SuperNet %s - exiting" % supernet)
  sys.exit(3)
 print str(cidr.network_ip)
 networkArray = str.split(str(cidr.network_ip),'.')
 print networkArray
 print str(cidr.netmask)
 supernetArray = str.split(supernet, '/')
 if int(supernetArray[1]) > 24:
  print "minumum supernet is /24"
  sys.exit(3)
 print str(cidr.broadcast_ip)
 broadcastArray = str.split(str(cidr.broadcast_ip),'.')
 print broadcastArray
 print str(cidr.first_ip)
 print str(cidr.last_ip)
 for d in range(int(networkArray[2]), int(broadcastArray[2])+1):
  set=str("%s.%s.%s.0/24" % (networkArray[0], networkArray[1], str(d)))
  cursor = db.cursor ()
  Q="INSERT into `sets` (`set`) VALUES ('" + set + "');"
  print("[INSERT SET] %s" % set)
  try:
   cursor.execute (Q)
   cursor.execute ("commit")
   cursor.close ()
  except MySQLdb.IntegrityError:
   print ("DUPLICATE SET %s -- exiting" % set)
   sys.exit(3)
 

def create_set():
 print "create_set"

def create_subnet():
 print "create_subnet"

def create_host():
 print "create_host"

def query_organization():
 print "query_organization"

def query_supernet():
 print "query_supernet"
 cursor = db.cursor ()
 cursor.execute ("SELECT VERSION()")
 row = cursor.fetchone ()
 print "server version:", row[0]
 cursor.close ()

def query_set():
 print "query_set"

def query_subnet():
 print "query_subnet"

def query_host():
 print "query_host"

def query():
 usage(sys.argv) 
 sys.argv.pop(0)
 print "you are querying " + sys.argv[0]
 options = {"organization" : query_organization,
            "supernet" : query_supernet,
            "set" : query_set,
            "subnet" : query_subnet,
            "host" : query_host
 }
 options[sys.argv[0]]()

def create():
 usage(sys.argv) 
 sys.argv.pop(0)
 print "you are creating"
 options = {"organization" : create_organization,
            "supernet" : create_supernet,
            "set" : create_set,
            "subnet" : create_subnet,
            "host" : create_host
 }
 options[sys.argv[0]]()

options = {"query" : query,
           "create" : create
}
options[cmd]()

